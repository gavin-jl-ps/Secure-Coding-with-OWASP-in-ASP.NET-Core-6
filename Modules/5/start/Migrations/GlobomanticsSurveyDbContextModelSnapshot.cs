// <auto-generated />
using System;
using Globomantics.Survey.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Globomantics.Survey.Migrations
{
    [DbContext(typeof(GlobomanticsSurveyDbContext))]
    partial class GlobomanticsSurveyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurvey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SurveyCompleteMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerSurveys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900"),
                            SurveyCompleteMessage = "You completed the survey, THANKS!!!",
                            Title = "Staff Survey - Carved Rock"
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurveyResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerSurveyResponses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4591765c-a4d3-47ac-b0e2-3fc8cdcb3eeb"),
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("2a8e0083-3558-49a4-b8a8-9b5a5c801788"),
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyResponseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SurveyResponseId");

                    b.ToTable("SurveyAnswer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a694606f-c45f-4654-af87-3c459227f56d"),
                            Answer = "Less than 1 year",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyResponseId = new Guid("4591765c-a4d3-47ac-b0e2-3fc8cdcb3eeb")
                        },
                        new
                        {
                            Id = new Guid("02690d61-33fb-4d91-9ee0-b2e98bef00bd"),
                            Answer = "Yes",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyResponseId = new Guid("4591765c-a4d3-47ac-b0e2-3fc8cdcb3eeb")
                        },
                        new
                        {
                            Id = new Guid("a15a3f29-7932-43d0-81ad-b811ba4e2547"),
                            Answer = "It's really cool here!",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyResponseId = new Guid("4591765c-a4d3-47ac-b0e2-3fc8cdcb3eeb")
                        },
                        new
                        {
                            Id = new Guid("41c30f46-0b04-425a-b538-e4d70faede95"),
                            Answer = "More than 5 years",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyResponseId = new Guid("2a8e0083-3558-49a4-b8a8-9b5a5c801788")
                        },
                        new
                        {
                            Id = new Guid("fda43275-a995-4e38-90ac-fb5d3df5b934"),
                            Answer = "No",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyResponseId = new Guid("2a8e0083-3558-49a4-b8a8-9b5a5c801788")
                        },
                        new
                        {
                            Id = new Guid("ea46a0f3-8435-4dec-860c-8647cee007a2"),
                            Answer = "My computer is really slow",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyResponseId = new Guid("2a8e0083-3558-49a4-b8a8-9b5a5c801788")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PossibleAnswers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("CustomerSurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9901"),
                            Answer = "",
                            PossibleAnswers = "Less than 1 year|1-5 years|More than 5 years",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9902"),
                            Answer = "",
                            PossibleAnswers = "Yes|No|Sometimes",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9903"),
                            Answer = "",
                            PossibleAnswers = "",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyAnswer", b =>
                {
                    b.HasOne("Globomantics.Survey.Models.CustomerSurveyResponse", "SurveyResponse")
                        .WithMany("Answers")
                        .HasForeignKey("SurveyResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyResponse");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyQuestion", b =>
                {
                    b.HasOne("Globomantics.Survey.Models.CustomerSurvey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurvey", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurveyResponse", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
