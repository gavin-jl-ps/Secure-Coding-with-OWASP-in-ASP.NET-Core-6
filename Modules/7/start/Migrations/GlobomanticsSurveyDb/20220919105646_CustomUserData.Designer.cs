// <auto-generated />
using System;
using Globomantics.Survey.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Globomantics.Survey.Migrations.GlobomanticsSurveyDb
{
    [DbContext(typeof(GlobomanticsSurveyDbContext))]
    [Migration("20220919105646_CustomUserData")]
    partial class CustomUserData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Globomantics.Survey.Areas.Identity.Data.GloboSurveyUserTicket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GloboSurveyUserTickets");

                    b.HasData(
                        new
                        {
                            Id = "a4df7171-f21e-4ce3-a98b-fbc3310f62f0",
                            Message = "I've recently changed my surname from May to Johnson, could you update your system please?",
                            Title = "Name change required",
                            UserId = "8f8afc29-228d-4508-9f7a-7d17c4ae9901"
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurvey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SurveyCompleteMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerSurveys");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900"),
                            SurveyCompleteMessage = "You completed the survey, THANKS!!!",
                            Title = "Staff Survey - Carved Rock"
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurveyResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerSurveyResponses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f31e0b4-10ec-4a0f-86c6-726ea2a34d90"),
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("1abbd06e-a72b-480d-afa6-1586e7eb6da4"),
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyResponseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SurveyResponseId");

                    b.ToTable("SurveyAnswer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70e42800-d3a3-4f72-a492-3de95ade3acf"),
                            Answer = "Less than 1 year",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyResponseId = new Guid("4f31e0b4-10ec-4a0f-86c6-726ea2a34d90")
                        },
                        new
                        {
                            Id = new Guid("3c80744a-8ab3-415a-8043-06cceaf8da75"),
                            Answer = "Yes",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyResponseId = new Guid("4f31e0b4-10ec-4a0f-86c6-726ea2a34d90")
                        },
                        new
                        {
                            Id = new Guid("44c7cda7-1e08-4f34-88d4-0bd6da36b447"),
                            Answer = "It's really cool here!",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyResponseId = new Guid("4f31e0b4-10ec-4a0f-86c6-726ea2a34d90")
                        },
                        new
                        {
                            Id = new Guid("1806bf4d-c7ad-4a66-a57b-696555c9987b"),
                            Answer = "More than 5 years",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyResponseId = new Guid("1abbd06e-a72b-480d-afa6-1586e7eb6da4")
                        },
                        new
                        {
                            Id = new Guid("5dfa6f94-b93c-4150-a33a-57c85574bcce"),
                            Answer = "No",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyResponseId = new Guid("1abbd06e-a72b-480d-afa6-1586e7eb6da4")
                        },
                        new
                        {
                            Id = new Guid("285d0c21-89bf-461d-9b5b-c92eba210bc1"),
                            Answer = "My computer is really slow",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyResponseId = new Guid("1abbd06e-a72b-480d-afa6-1586e7eb6da4")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PossibleAnswers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("CustomerSurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9901"),
                            Answer = "",
                            PossibleAnswers = "Less than 1 year|1-5 years|More than 5 years",
                            Question = "How long have you worked at Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9902"),
                            Answer = "",
                            PossibleAnswers = "Yes|No|Sometimes",
                            Question = "Do you enjoy working at Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        },
                        new
                        {
                            Id = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9903"),
                            Answer = "",
                            PossibleAnswers = "",
                            Question = "Any comments on how you find working for Carved Rock?",
                            SurveyId = new Guid("8f8afc29-228d-4508-9f7a-7d17c4ae9900")
                        });
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyAnswer", b =>
                {
                    b.HasOne("Globomantics.Survey.Models.CustomerSurveyResponse", "SurveyResponse")
                        .WithMany("Answers")
                        .HasForeignKey("SurveyResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyResponse");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.SurveyQuestion", b =>
                {
                    b.HasOne("Globomantics.Survey.Models.CustomerSurvey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurvey", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Globomantics.Survey.Models.CustomerSurveyResponse", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
